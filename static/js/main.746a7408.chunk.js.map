{"version":3,"sources":["data.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["links","id","url","text","Navbar","useState","showLinks","setShowLinks","linksContainerRef","useRef","linksRef","useEffect","linksHeight","current","getBoundingClientRect","height","style","className","onClick","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","ref","map","link","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLACaA,EAAQ,CACnB,CACEC,GAAI,EACJC,IAAK,IACLC,KAAM,UAER,CACEF,GAAI,EACJC,IAAK,SACLC,KAAM,SAER,CACEF,GAAI,EACJC,IAAK,YACLC,KAAM,YAER,CACEF,GAAI,EACJC,IAAK,WACLC,KAAM,WAER,CACEF,GAAI,EACJC,IAAK,WACLC,KAAM,YCiBKC,MAtCf,WAAmB,IAAD,EACoBC,oBAAS,GAD7B,mBACPC,EADO,KACIC,EADJ,KAERC,EAAoBC,iBAAO,MAC3BC,EAAWD,iBAAO,MAYxB,OAVAE,qBAAU,WACN,IAAMC,EAAcF,EAASG,QAAQC,wBAAwBC,OAGzDP,EAAkBK,QAAQG,MAAMD,OADhCT,EACA,UAA4CM,EAA5C,MAEyC,QAE9C,CAACN,IAGA,8BACI,sBAAKW,UAAU,aAAf,UACI,sBAAKA,UAAU,aAAf,UACI,sCACA,wBAAQC,QAAS,kBAAMX,GAAcD,IAAYW,UAAU,aAA3D,SACI,qBAAKA,UAAU,cAAcE,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAYC,MAAM,6BAAzF,SAAsH,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,kCAGnM,qBAAKT,UAAU,kBAAkBU,IAAKnB,EAAtC,SACI,oBAAIS,UAAU,QAAQU,IAAKjB,EAA3B,SACKV,EAAM4B,KAAI,SAAAC,GAAI,OACX,6BACI,mBAAGC,KAAMD,EAAK3B,IAAd,SAAoB2B,EAAK1B,QADpB0B,EAAK5B,iBCnB3B8B,MAVf,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCMOe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.746a7408.chunk.js","sourcesContent":["\nexport const links = [\n  {\n    id: 1,\n    url: '/',\n    text: 'random',\n  },\n  {\n    id: 2,\n    url: '/about',\n    text: 'about',\n  },\n  {\n    id: 3,\n    url: '/projects',\n    text: 'projects',\n  },\n  {\n    id: 4,\n    url: '/contact',\n    text: 'contact',\n  },\n  {\n    id: 5,\n    url: '/profile',\n    text: 'profile',\n  },\n];","import React, { useState, useEffect, useRef } from 'react';\n\nimport { links } from \"../data\";\n\nfunction Navbar() {\n    const [showLinks, setShowLinks] = useState(false);\n    const linksContainerRef = useRef(null);\n    const linksRef = useRef(null);\n\n    useEffect(() => {\n        const linksHeight = linksRef.current.getBoundingClientRect().height;\n\n        if (showLinks) {\n            linksContainerRef.current.style.height = `${linksHeight}px`;\n        } else {\n            linksContainerRef.current.style.height = \"0px\";\n        }\n    }, [showLinks]);\n    \n    return (\n        <nav>\n            <div className=\"nav-center\">\n                <div className=\"nav-header\">\n                    <h1>Logo</h1>\n                    <button onClick={() => setShowLinks(!showLinks)} className=\"nav-toggle\">\n                        <svg className=\"burger-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h8m-8 6h16\" /></svg>\n                    </button>\n                </div>\n                <div className=\"links-container\" ref={linksContainerRef}>\n                    <ul className=\"links\" ref={linksRef}>\n                        {links.map(link => (\n                            <li key={link.id}>\n                                <a href={link.url}>{link.text}</a>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import Navbar from \"./components/Navbar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navbar />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}